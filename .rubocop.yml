inherit_from:
  - .rubocop_todo.yml

AllCops:
  TargetRubyVersion: 2.5
  TargetRailsVersion: 4.2
  # Exclude anything that isn't really part of our code.
  # rails_helper is excluded because it's full of solecisms, but it's mostly
  # generated code and copy-and-pasted snipets from READMEs.
  Exclude:
    - 'Guardfile'
    - 'vendor/**/*'
    - 'db/**/*'
    - 'bin/**/*'
    - '**/*.gemspec'
    - '**/Rakefile'
    - '**/Vagrantfile'
    - 'spec/rails_helper.rb'
    - 'lib/tasks/cucumber.rake'
    - 'features/support/env.rb'
    - 'script/cucumber'
    - 'lib/log_stuff.rb'

Rails:
  Enabled: true

# Allow long lines in specs, as it's almost impossible to fit RSpec's
# expectations into 80 characters.
Metrics/LineLength:
  Max: 100
  Exclude:
    - 'spec/**/*'
    - 'features/**/*'

Metrics/ClassLength:
  Max: 120

# Allow expect {}.to blocks in specs
# but not in the code
Style/BlockDelimiters:
  Enabled: true
  Exclude:
    - 'spec/**/*'

# Don't worry about long methods in specs.
Metrics/MethodLength:
  Exclude:
    - 'spec/**/*'
    - 'app/models/ability.rb'
    - 'config/initializers/markdown_handler.rb'

# No need to check for describe class param in support files.
RSpec/DescribeClass:
  Exclude:
    - spec/support/**/*
    - spec/views/**/*

Rails/FilePath:
  Exclude:
    - spec/routing/**/*

# private/protected/public
Layout/AccessModifierIndentation:
  EnforcedStyle: indent

# Just indent parameters by two spaces. It's less volatile if methods change,
# and there's less busy work lining things up.
Layout/AlignParameters:
  EnforcedStyle: with_fixed_indentation

Style/ClassAndModuleChildren:
  EnforcedStyle: nested

Style/CollectionMethods:
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    each_with_object: 'inject'
    inject: 'inject'
    reduce: 'inject'
    detect: 'find'
    find_all: 'select'

# Chain methods with trailing dots.
Layout/DotPosition:
  EnforcedStyle: trailing

# No, we don't prefer each_with_object
Style/EachWithObject:
  Enabled: false

# Prefer blank line after class/module start.
Layout/EmptyLinesAroundClassBody:
  Enabled: false

Layout/EmptyLinesAroundModuleBody:
  Enabled: false

Layout/EmptyLinesAroundBlockBody:
  Enabled: false

Layout/EmptyLineAfterGuardClause:
  Enabled: false

Layout/LeadingBlankLines:
  Enabled: false

# We have a mixture at the moment, so don't enforce anything.
Style/FormatString:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

# It's not really clearer to replace every if with a return if.
Style/GuardClause:
  Enabled: false

# Groups of three is not always the right thing for numeric literals
Style/NumericLiterals:
  Enabled: false

# Percent-formatting and hash interpolation both have their place. Don't
# enforce any particular one.
Style/StringLiterals:
  Enabled: false

# I'm happy with raise, thanks.
Style/SignalException:
  Enabled: false

# Let us use foo? methods
Style/TrivialAccessors:
  AllowPredicates: true

Style/DateTime:
  Enabled: false

# Prefer sensible naming to comments everywhere.
Documentation:
  Description: Document classes and non-namespace modules.
  Enabled: false

# Would enforce do_y if x over if x / do y / end. As with GuardClause above,
# this enforces code organisation that doesn't necesarily make things clearer.
IfUnlessModifier:
  Enabled: false

# Allow safe assignment in conditions.
Lint/AssignmentInCondition:
  AllowSafeAssignment: false

Lint/Loop:
  Enabled: false

RSpec/NestedGroups:
  Max: 10

RSpec/ExpectActual:
  Exclude:
    - 'spec/routing/**/*'

Metrics/BlockLength:
  Exclude:
    - 'spec/**/*'
    - 'features/**/*'
    - 'config/**/*'
    - 'lib/tasks/**/*'

# ---------------
# HttpPositionalArguments is rails 5 only
# https://github.com/bbatsov/rubocop/issues/3629
# ---------------
Rails/HttpPositionalArguments:
  Enabled: false

RSpec/MultipleExpectations:
  Exclude:
    - 'spec/features/**/*'
    - 'spec/support/shared_examples/**/*'

RSpec/ExampleLength:
  Exclude:
    - 'spec/**/*'

Rails/ApplicationRecord:
  Enabled: false

Rails/InverseOf:
  Enabled: false

Rails/ActiveRecordAliases:
  Enabled: false

Rails/HasManyOrHasOneDependent:
  Enabled: false

Rails/LexicallyScopedActionFilter:
  Enabled: false

Style/WordArray:
  EnforcedStyle: brackets

Style/SymbolArray:
  EnforcedStyle: brackets

Style/FormatStringToken:
  EnforcedStyle: template

Style/Encoding:
  Enabled: false

Naming/MemoizedInstanceVariableName:
  Enabled: false

Lint/AmbiguousBlockAssociation:
  Exclude:
    - "spec/**/*"

# After update to rubocop-rspec 1.30.1
RSpec/ImplicitSubject:
  Enabled: false

RSpec/EmptyLineAfterFinalLet:
  Enabled: false

RSpec/ExpectChange:
  Enabled: false

RSpec/ContextWording:
  Enabled: false

RSpec/ScatteredLet:
  Enabled: false

RSpec/EmptyLineAfterExampleGroup:
  Enabled: false

RSpec/LeadingSubject:
  Enabled: false

RSpec/ExampleWording:
  Enabled: false

RSpec/MultipleSubjects:
  Enabled: false

RSpec/EmptyLineAfterHook:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

Rails/HttpStatus:
  Enabled: false

RSpec/EmptyLineAfterSubject:
  Enabled: false

FactoryBot/AttributeDefinedStatically:
  Enabled: false

RSpec/ReceiveCounts:
  Enabled: false

RSpec/PredicateMatcher:
  Enabled: false

RSpec/LetBeforeExamples:
  Enabled: false

RSpec/HooksBeforeExamples:
  Enabled: false
Capybara/FeatureMethods:
  Enabled: false

Capybara/CurrentPathExpectation:
  Enabled: false

RSpec/ExpectInHook:
  Enabled: false

RSpec/OverwritingSetup:
  Enabled: false

RSpec/InstanceVariable:
  Enabled: false

FactoryBot/CreateList:
  Enabled: false

require: rubocop-rspec
