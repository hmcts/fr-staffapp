parameters:
  rubyVersion: ''
  bundlerVersion: ''


steps:
- script: |
    docker build -f Dockerfile.test -t $(dockerId)/hwf-staff:$BUILD_BUILDID .
    docker run --name dotnetcoreapp --rm -d $(dockerId)/hwf-staff:$BUILD_BUILDID
    docker cp hwf-staff:app/TestResults $(System.DefaultWorkingDirectory)
    docker cp hwf-staff:app/out $(System.DefaultWorkingDirectory)
    docker stop hwf-staff

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish Ruby tests'
    failTaskOnFailedTests: true



# - script: |
#     mv .dockerignore .dockerignore.backup
#     cp Dockerfile.test.dockerignore .dockerignore
#     docker-compose -f docker-compose-test.yml run --rm test
#     rm .dockerignore
#     mv .dockerignore.backup .dockerignore
#   displayName: 'Docker compose tests'

# ISSUE with different version of ruby
# need to find a way to run this in Docker

# - task: UseRubyVersion@0
#   inputs:
#     versionSpec: '$(rubyVersion)'
# - script: |
#     gem install bundler -v $(bundlerVersion)
#     bundle install --retry=3 --jobs=4
#     psql -h localhost -c 'create role vsts login createdb superuser;' -U postgres
#     bundle exec rake db:setup
#     bundle exec rake parallel:setup
#     npm install --production
#   displayName: 'cucumber setup'
# - script: |
#     CAPYBARA_SERVER_PORT=random bundle exec rake parallel:features
#   displayName: 'cucumber test'
